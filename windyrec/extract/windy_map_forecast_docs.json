{"raw_content": "{\n  \"data\": {\n    \"extracted_information\": \"Documentación completa de la Map Forecast API de Windy, una librería basada en Leaflet 1.4.x que permite personalizar visualizaciones de mapas de Windy. Permite la integración en páginas web y dispositivos móviles, ofreciendo capas, partículas, leyenda, selector (picker) e isolíneas, así como controles básicos del mapa. Se puede controlar programáticamente usando el objeto JavaScript `windyAPI` o mediante controles de UI. La API se basa en la librería Leaflet para la funcionalidad básica del mapa y extiende esta funcionalidad con las visualizaciones de Windy.\",\n    \"specifications\": {\n      \"base_library\": \"Leaflet 1.4.x\",\n      \"windy_api_library_url\": \"https://api.windy.com/assets/map-forecast/libBoot.js\",\n      \"leaflet_library_url\": \"https://unpkg.com/leaflet@1.4.0/dist/leaflet.js\",\n      \"coordinate_system\": \"Leaflet usa `{ lat, lng }`, Windy API usa `{ lat, lon }`\",\n      \"map_instances\": \"Solo una instancia del mapa Windy por página, múltiples instancias de Leaflet permitidas.\",\n      \"css_handling\": \"No usar el CSS de Leaflet; la API de Windy descarga estilos corregidos. Clases CSS de Leaflet anidadas bajo `#windy`.\"\n    },\n    \"pricing\": {\n      \"testing_version\": {\n        \"status\": \"Gratis\",\n        \"features\": \"Subconjunto limitado de modelos, capas e isolíneas.\",\n        \"usage_restriction\": \"Solo para desarrollo, no permitido para uso en producción.\"\n      },\n      \"professional_version\": {\n        \"status\": \"De pago\",\n        \"description\": \"Para trabajo serio.\",\n        \"more_info_link\": \"/map-forecast#comparison\"\n      }\n    },\n    \"features\": [\n      {\n        \"name\": \"windyAPI Object\",\n        \"description\": \"Objeto JavaScript principal devuelto tras la inicialización de la API para controlar las visualizaciones programáticamente.\",\n        \"components\": [\n          {\n            \"name\": \"store\",\n            \"description\": \"Clase más importante de la API; mantiene el estado del mapa y las visualizaciones. Permite cambiar el estado mediante una estructura clave-valor.\",\n            \"methods\": [\n              {\"name\": \"get(key)\", \"returns\": \"any\", \"description\": \"Devuelve el valor para la 'key'.\"},\n              {\"name\": \"getAllowed(key)\", \"returns\": \"any[] | string\", \"description\": \"Devuelve un array de valores permitidos para la 'key'.\"},\n              {\"name\": \"set(key, value, opts)\", \"returns\": \"-\", \"description\": \"Establece o cambia el 'value' para la 'key'. Opcional '{ forceChange: true }' para saltar validaciones.\"},\n              {\"name\": \"on(key, callback)\", \"returns\": \"-\", \"description\": \"Enlaza 'callback' para ejecutar cada vez que 'key' cambie.\"},\n              {\"name\": \"once(key, callback)\", \"returns\": \"-\", \"description\": \"Enlaza 'callback' para ejecutar una sola vez cuando 'key' cambie.\"},\n              {\"name\": \"off(key, callback)\", \"returns\": \"-\", \"description\": \"Desvincula la función 'callback'.\"}\n            ],\n            \"tutorials\": [\n              {\"name\": \"Parameters\", \"link\": \"/map-forecast/tutorials/parameters\"}\n            ]\n          },\n          {\n            \"name\": \"map\",\n            \"description\": \"Instancia de la clase Leaflet L.Map.\",\n            \"reference\": \"Leaflet documentation: https://leafletjs.com/reference.html#map\"\n          },\n          {\n            \"name\": \"picker\",\n            \"description\": \"Selector de clima para obtener el valor de la capa actual en coordenadas específicas. Funciona en escritorio, con posibilidad de adaptar a móvil.\",\n            \"methods\": [\n              {\"name\": \"open({ lat, lon })\", \"returns\": \"-\", \"description\": \"Abre el selector en las coordenadas especificadas.\"},\n              {\"name\": \"close()\", \"returns\": \"-\", \"description\": \"Cierra el selector.\"},\n              {\"name\": \"getParams()\", \"returns\": \"{ lat, lon, values, overlay }\", \"description\": \"Obtiene valores del selector abierto.\"},\n              {\"name\": \"on(event, callback)\", \"returns\": \"-\", \"description\": \"Enlaza 'callback' para ejecutar cada vez que se emita el 'event'.\"},\n              {\"name\": \"once(event, callback)\", \"returns\": \"-\", \"description\": \"Enlaza 'callback' para ejecutar una sola vez cuando se emita el 'event'.\"},\n              {\"name\": \"off(event, callback)\", \"returns\": \"-\", \"description\": \"Desvincula 'callback' del 'event'.\"}\n            ],\n            \"events\": [\n              {\"name\": \"pickerOpened\", \"data\": \"{ lat, lon }\", \"description\": \"Disparado inmediatamente después de abrir el selector.\"},\n              {\"name\": \"pickerMoved\", \"data\": \"{ lat, lon, values, overlay }\", \"description\": \"Disparado cada vez que el selector se mueve.\"},\n              {\"name\": \"pickerClosed\", \"data\": \"-\", \"description\": \"Disparado inmediatamente después de cerrar el selector.\"}\n            ],\n            \"tutorials\": [\n              {\"name\": \"Picker\", \"link\": \"/map-forecast/tutorials/picker\"}\n            ]\n          },\n          {\n            \"name\": \"utils\",\n            \"description\": \"Colección de métodos útiles.\",\n            \"methods\": [\n              {\"name\": \"deg2rad(deg)\", \"returns\": \"number\", \"description\": \"Convierte grados a radianes.\"},\n              {\"name\": \"isNear({ lat, lon }, { lat, lon })\", \"returns\": \"boolean\", \"description\": \"Comprueba si dos objetos latLon están a 0.01 grados de distancia.\"},\n              {\"name\": \"isValidLatLonObj({ lat, lon })\", \"returns\": \"boolean\", \"description\": \"Comprueba si el objeto contiene propiedades 'lat' y 'lon'.\"},\n              {\"name\": \"lonDegToXUnit(deg)\", \"returns\": \"number\", \"description\": \"Convierte grado de longitud a mercator.\"},\n              {\"name\": \"latDegToYUnit(deg)\", \"returns\": \"number\", \"description\": \"Convierte grado de latitud a mercator.\"},\n              {\"name\": \"unitXToLonDeg(x)\", \"returns\": \"number\", \"description\": \"Convierte mercator a grado de longitud.\"},\n              {\"name\": \"unitYToLatDeg(y)\", \"returns\": \"number\", \"description\": \"Convierte mercator a grado de latitud.\"},\n              {\"name\": \"latLon2str({ lat, lon })\", \"returns\": \"string\", \"description\": \"Codifica objeto latLon a string.\"},\n              {\"name\": \"str2latLon(hash)\", \"returns\": \"{ lat, lon }\", \"description\": \"Decodifica latLon de un hash de string.\"},\n              {\"name\": \"wave2obj(number[])\", \"returns\": \"{ period, dir, size }\", \"description\": \"Convierte vectores de onda a objeto amigable.\"},\n              {\"name\": \"wind2obj(number[])\", \"returns\": \"{ wind, dir }\", \"description\": \"Convierte vectores de viento a objeto amigable.\"}\n            ]\n          },\n          {\n            \"name\": \"broadcast\",\n            \"description\": \"Emisor y difusor principal de eventos.\",\n            \"methods\": [\n              {\"name\": \"fire(event, ...args)\", \"returns\": \"-\", \"description\": \"Emite el 'event' con argumentos para los callbacks.\"},\n              {\"name\": \"on(event, callback)\", \"returns\": \"-\", \"description\": \"Enlaza 'callback' para ejecutar cada vez que se emita el 'event'.\"},\n              {\"name\": \"once(event, callback)\", \"returns\": \"-\", \"description\": \"Enlaza 'callback' para ejecutar una sola vez cuando se emita el 'event'.\"},\n              {\"name\": \"off(event, callback)\", \"returns\": \"-\", \"description\": \"Desvincula 'callback' del 'event'.\"}\n            ],\n            \"tutorials\": [\n              {\"name\": \"Broadcast\", \"link\": \"/map-forecast/tutorials/bcast\"}\n            ]\n          },\n          {\n            \"name\": \"overlays\",\n            \"description\": \"Contiene instancias de todas las capas, útil para cambiar la métrica de una capa (e.g., 'wind' o 'temp').\",\n            \"methods\": [\n              {\"name\": \"convertNumber(value)\", \"returns\": \"number\", \"description\": \"Convierte el valor métrico predeterminado al de la métrica seleccionada actualmente.\"},\n              {\"name\": \"convertValue(value)\", \"returns\": \"string\", \"description\": \"Convierte el valor métrico predeterminado al de la métrica seleccionada actualmente, incluye etiqueta con unidades.\"},\n              {\"name\": \"cycleMetric()\", \"returns\": \"-\", \"description\": \"Cambia a la siguiente métrica disponible.\"},\n              {\"name\": \"listMetrics()\", \"returns\": \"string[]\", \"description\": \"Devuelve la lista de todas las métricas disponibles.\"},\n              {\"name\": \"setMetric(metric)\", \"returns\": \"-\", \"description\": \"Establece una 'metric' específica.\"}\n            ],\n            \"attributes\": [\n              {\"name\": \"metric\", \"description\": \"Etiqueta de la métrica actualmente seleccionada.\"}\n            ],\n            \"tutorials\": [\n              {\"name\": \"Metrics\", \"link\": \"/map-forecast/tutorials/metrics\"}\n            ]\n          },\n          {\n            \"name\": \"colors\",\n            \"description\": \"Contiene todas las definiciones de color de todas las capas. Útil para cambiar la definición de color de cualquier capa.\",\n            \"methods\": [\n              {\"name\": \"changeColor(colors)\", \"returns\": \"-\", \"description\": \"Cambia los colores predeterminados. Acepta el mismo formato que la herramienta 'Customize color scale' de Windy.com.\"},\n              {\"name\": \"checkValidity(colors)\", \"returns\": \"boolean\", \"description\": \"Verifica si la escala de color es válida (solo estructura del objeto).\"},\n              {\"name\": \"color(value)\", \"returns\": \"string\", \"description\": \"Devuelve el color para el 'value' en formato de cadena 'rgb(r,g,b)'.\"},\n              {\"name\": \"RGBA(value)\", \"returns\": \"number[]\", \"description\": \"Devuelve el color para el 'value' en formato de array '[R,G,B,A]'.\"},\n              {\"name\": \"toDefault()\", \"returns\": \"-\", \"description\": \"Restablece los colores a los valores predeterminados.\"}\n            ]\n          }\n        ]\n      }\n    ],\n    \"temporal_info\": {},\n    \"geographical_data\": {},\n    \"references\": [\n      {\"name\": \"Windy.com\", \"url\": \"https://windy.com\"},\n      {\"name\": \"Leaflet\", \"url\": \"https://leafletjs.com/\"},\n      {\"name\": \"Leaflet Documentation\", \"url\": \"https://leafletjs.com/reference.html#map\"},\n      {\"name\": \"Leaflet Plugins\", \"url\": \"https://leafletjs.com/plugins.html\"},\n      {\"name\": \"Tutorial: Hello World example\", \"url\": \"/map-forecast/tutorials/hello-world\"},\n      {\"name\": \"Tutorial: Parameters\", \"url\": \"/map-forecast/tutorials/parameters\"},\n      {\"name\": \"Tutorial: Picker\", \"url\": \"/map-forecast/tutorials/picker\"},\n      {\"name\": \"Tutorial: Broadcast\", \"url\": \"/map-forecast/tutorials/bcast\"},\n      {\"name\": \"Tutorial: Metrics\", \"url\": \"/map-forecast/tutorials/metrics\"},\n      {\"name\": \"Manage your API key\", \"url\": \"/keys\"},\n      {\"name\": \"Windy API community discussion\", \"url\": \"https://community.windy.com/category/12/windy-api-v4\"}\n    }\n  }\n}"}