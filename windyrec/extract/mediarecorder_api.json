{"extracted_information": "La interfaz `MediaRecorder` de la MediaStream Recording API permite grabar fácilmente medios. Se crea usando el constructor `MediaRecorder()`, al que se le puede pasar un `MediaStream` para grabar y opciones como el tipo MIME del contenedor (`\"video/webm\"` o `\"video/mp4\"`) y las tasas de bits de audio/video. La API permite iniciar, pausar, reanudar y detener la grabación, y solicitar datos grabados en forma de `Blob`. Emite eventos para el estado de grabación y la disponibilidad de datos.", "specifications": {"api_name": "MediaRecorder", "description": "Interfaz para grabar medios (`MediaStream`).", "functionalities": {"constructor": {"name": "MediaRecorder()", "description": "Crea un nuevo objeto MediaRecorder. Requiere un `MediaStream`. Permite configurar el tipo MIME del contenedor (ej. 'video/webm', 'video/mp4') y las tasas de bits de audio y video."}, "instance_properties": {"mimeType": "Tipo MIME seleccionado para el contenedor de grabación.", "state": "Estado actual del objeto ('inactive', 'recording', 'paused').", "stream": "El `MediaStream` pasado al constructor.", "videoBitsPerSecond": "Tasa de bits de codificación de video en uso.", "audioBitsPerSecond": "Tasa de bits de codificación de audio en uso.", "audioBitrateMode": "Modo de tasa de bits usado para codificar pistas de audio."}, "static_methods": {"isTypeSupported(mimeType)": "Devuelve `true` si el tipo MIME de medio dado es compatible con el agente de usuario actual."}, "instance_methods": {"pause()": "Pausa la grabación de medios.", "requestData()": "Solicita un `Blob` con los datos guardados hasta el momento. La grabación continúa en un nuevo `Blob`.", "resume()": "Reanuda la grabación de medios después de pausarla.", "start(timeslice)": "Comienza la grabación de medios. Opcionalmente, se puede pasar un argumento `timeslice` (en milisegundos) para capturar medios en fragmentos separados de esa duración.", "stop()": "Detiene la grabación. Se dispara un evento `dataavailable` con el `Blob` final."}, "events": {"dataavailable": "Se dispara periódicamente (si `timeslice` se especificó) o al final. Contiene los medios grabados en su propiedad `data` (tipo `BlobEvent`).", "error": "Se dispara cuando hay errores fatales que detienen la grabación. Contiene un `DOMException`.", "pause": "Se dispara cuando la grabación de medios se pausa.", "resume": "Se dispara cuando la grabación de medios se reanuda.", "start": "Se dispara cuando la grabación de medios comienza.", "stop": "Se dispara cuando la grabación de medios finaliza."}}}, "pricing": {}, "features": ["Grabación de flujos de medios (`MediaStream`).", "Configuración de tipo MIME de salida (ej. 'video/webm', 'video/mp4').", "Configuración de tasas de bits para audio y video.", "Control de estado de grabación (iniciar, pausar, reanudar, detener).", "Solicitud incremental de datos grabados (`Blob`).", "Fragmentación de grabación por tiempo (`timeslice`).", "Verificación de compatibilidad de tipos MIME (`isTypeSupported`)."], "statistics": {}, "temporal_info": {"baseline_availability": "Disponible en navegadores desde abril de 2021."}, "geographical_data": {}, "references": ["MediaStream Recording API (/en-US/docs/Web/API/MediaStream_Recording_API)", "MediaStream Recording Spec (# mediarecorder-api) (https://w3c.github.io/mediacapture-record/#mediarecorder-api)", "Using the MediaStream Recording API (/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API)", "Web Dictaphone (https://mdn.github.io/dom-examples/media/web-dictaphone/)", "Recording a media element (/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element)", "simpl.info MediaStream Recording demo (https://simpl.info/mediarecorder/)", "OpenLang (https://github.com/chrisjohndigital/OpenLang)"]}