{"extracted_information": "La interfaz `MediaRecorder` de la MediaStream Recording API proporciona funcionalidad para grabar medios de forma sencilla. Permite grabar audio y video desde un `MediaStream`, controlar la grabación (pausar, reanudar, detener), y manejar los datos grabados en `Blob`s. Es ampliamente compatible con navegadores.", "specifications": {"constructor": {"name": "MediaRecorder()", "description": "Crea un nuevo objeto `MediaRecorder` a partir de un `MediaStream`. Permite configurar el tipo MIME del contenedor (ej. 'video/webm', 'video/mp4') y las tasas de bits de audio y video o una tasa de bits general.", "parameters": [{"name": "MediaStream", "description": "El flujo de medios a grabar."}, {"name": "options", "description": "Objeto opcional para configurar el tipo MIME y las tasas de bits."}]}, "instance_properties": [{"name": "mimeType", "description": "Devuelve el tipo MIME seleccionado para el contenedor de grabación.", "read_only": true}, {"name": "state", "description": "Devuelve el estado actual del objeto `MediaRecorder` ('inactive', 'recording', o 'paused').", "read_only": true}, {"name": "stream", "description": "Devuelve el `MediaStream` pasado al constructor.", "read_only": true}, {"name": "videoBitsPerSecond", "description": "Devuelve la tasa de bits de codificación de video en uso.", "read_only": true}, {"name": "audioBitsPerSecond", "description": "Devuelve la tasa de bits de codificación de audio en uso.", "read_only": true}, {"name": "audioBitrateMode", "description": "Devuelve el modo de tasa de bits utilizado para codificar pistas de audio.", "read_only": true}], "static_methods": [{"name": "MediaRecorder.isTypeSupported(mimeType)", "description": "Método estático que devuelve `true` o `false` indicando si el tipo MIME dado es soportado por el agente de usuario actual."}], "instance_methods": [{"name": "pause()", "description": "Pausa la grabación de medios."}, {"name": "requestData()", "description": "Solicita un `Blob` que contiene los datos guardados hasta el momento. La grabación continúa, pero en un nuevo `Blob`."}, {"name": "resume()", "description": "Reanuda la grabación de medios después de haber sido pausada."}, {"name": "start([timeslice])", "description": "Comienza a grabar medios. Opcionalmente, se puede pasar un argumento `timeslice` en milisegundos para capturar los medios en trozos separados de esa duración."}, {"name": "stop()", "description": "Detiene la grabación. Se dispara un evento `dataavailable` que contiene el `Blob` final de datos guardados."}], "events": [{"name": "dataavailable", "description": "Se dispara periódicamente cada vez que se han grabado `timeslice` milisegundos de medios, o cuando se ha grabado todo el medio. Contiene el `Blob` de medios grabados."}, {"name": "error", "description": "Se dispara cuando hay errores fatales que detienen la grabación. Contiene un `DOMException` que describe el error."}, {"name": "pause", "description": "Se dispara cuando la grabación de medios se pausa."}, {"name": "resume", "description": "Se dispara cuando la grabación de medios se reanuda después de ser pausada."}, {"name": "start", "description": "Se dispara cuando comienza la grabación de medios."}, {"name": "stop", "description": "Se dispara cuando termina la grabación de medios."}]}, "pricing": {}, "features": ["Grabación sencilla de audio y video desde un `MediaStream`.", "Control detallado del estado de la grabación (`inactive`, `recording`, `paused`).", "Pausa y reanudación dinámica de la grabación.", "Capacidad de solicitar datos grabados en trozos (`Blob`s) sin detener la grabación.", "División automática de la grabación en trozos de duración específica (`timeslice`).", "Configuración de tipo MIME y tasas de bits (audio/video) al inicializar el grabador.", "Gestión de eventos para la disponibilidad de datos, errores, inicio, pausa, reanudación y parada de la grabación.", "Verificación de la compatibilidad de tipos MIME soportados por el navegador."], "statistics": {}, "temporal_info": {"availability_date": "Abril 2021"}, "geographical_data": {}, "references": [{"name": "MediaStream Recording API", "url": "/en-US/docs/Web/API/MediaStream_Recording_API"}, {"name": "MediaStream Recording - Especificación", "url": "https://w3c.github.io/mediacapture-record/#mediarecorder-api"}, {"name": "Using the MediaStream Recording API", "url": "/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API"}, {"name": "Web Dictaphone Demo (MDN)", "url": "https://mdn.github.io/dom-examples/media/web-dictaphone/"}, {"name": "Web Dictaphone Source (GitHub)", "url": "https://github.com/mdn/dom-examples/tree/main/media/web-dictaphone"}, {"name": "Recording a media element (MDN)", "url": "/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element"}, {"name": "simpl.info MediaStream Recording demo", "url": "https://simpl.info/mediarecorder/"}, {"name": "MediaDevices.getUserMedia() (MDN)", "url": "/en-US/docs/Web/API/MediaDevices/getUserMedia"}, {"name": "OpenLang (GitHub)", "url": "https://github.com/chrisjohndigital/OpenLang"}], "browser_compatibility": {"status": "Baseline Widely available", "details": "Funcionalidad bien establecida y funciona en muchos dispositivos y versiones de navegador. Disponible en navegadores desde abril de 2021. Algunas partes de esta característica pueden tener niveles de soporte variables."}, "recording_examples": {"type": "Ejemplo de grabación de audio (demuestra el uso de la API para grabación de medios)", "description": "El código de ejemplo proporcionado muestra cómo usar la API `MediaRecorder` para grabar audio desde el micrófono del usuario. Utiliza `navigator.mediaDevices.getUserMedia({ audio: true })` para obtener un stream de audio, crea una instancia de `MediaRecorder` con este stream, y gestiona los eventos `start`, `stop`, `onstop` y `ondataavailable`. Los datos de audio grabados se acumulan en trozos y se transforman en un `Blob` de tipo `audio/ogg; codecs=opus` que luego se reproduce en un elemento de audio. Aunque el ejemplo es de audio, la mecánica es aplicable a la grabación de video (ajustando las restricciones de `getUserMedia` y el tipo MIME del `Blob` resultante).", "mime_type_used_in_example": "audio/ogg; codecs=opus"}, "supported_formats": ["video/webm", "video/mp4", "audio/ogg; codecs=opus"]}