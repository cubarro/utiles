{"extracted_information": "CCapture.js es una librería para capturar animaciones basadas en canvas a una tasa de fotogramas fija, permitiendo grabar videos fluidos incluso si la renderización de cada fotograma toma segundos. Funciona alterando el comportamiento de métodos de tiempo como `Date.now()`, `setTimeout`, `requestAnimationFrame` para simular un paso de tiempo constante.", "specifications": {"compatibilidad_canvas": "Requiere una implementación de canvas HTML5 (2D o WebGL) en el navegador.", "control_framerate": "Captura a una tasa de fotogramas fija especificada (ej. 30, 60, 240 fps).", "manejo_tiempo": "Engancha `Date.now`, `Date.prototype.getTime`, `setTimeout`, `clearTimeout`, `setInterval`, `requestAnimationFrame`, `performance.now`, `HTMLVideoElement.prototype.currentTime`, `HTMLAudioElement.prototype.currentTime`.", "parametros_constructor": {"framerate": "Tasa de fotogramas objetivo para la captura.", "motionBlurFrames": "Supersampling de fotogramas para crear un fotograma con desenfoque de movimiento (0 o 1 sin efecto).", "format": "Formato de salida (webm/gif/png/jpg/ffmpegserver).", "quality": "Calidad para webm/jpg.", "name": "Nombre de los archivos a exportar (GUID si no se provee).", "verbose": "Muestra información en consola.", "display": "Añade un widget con información de captura (WIP).", "timeLimit": "Detiene y descarga automáticamente al alcanzar el tiempo límite (segundos).", "autoSaveTime": "Descarga automáticamente los datos capturados cada 'n' segundos (solo para webm/png/jpg).", "startTime": "Salta a la marca de tiempo (segundos).", "workersPath": "Ruta al script del worker de gif."}, "limitaciones": {"webm_writer": "La versión actual solo funciona en navegadores que soportan `image/webp` (principalmente Chrome).", "gif_js": "Limitaciones de rendimiento con muchos fotogramas.", "autoSaveTime": "Recomendado para archivos grandes para evitar problemas de navegador; genera archivos multi-parte.", "asignacion_memoria": "Posibles problemas de recolección de basura; se puede forzar `gc()` en Chrome con `--js-flags=\"--expose-gc\"`."}}, "pricing": {}, "features": [{"nombre": "Captura de animación basada en Canvas", "descripcion": "Permite grabar animaciones 2D y 3D (WebGL) renderizadas en un elemento HTML5 `<canvas>`."}, {"nombre": "Framerate Fijo", "descripcion": "Captura animaciones a un framerate predefinido, asegurando fluidez y consistencia independientemente del tiempo de renderizado por fotograma."}, {"nombre": "Control de Tiempo", "descripcion": "Engancha métodos JavaScript para obtener el tiempo transcurrido, como `requestAnimationFrame` y `setTimeout`, para simular un paso de tiempo constante."}, {"nombre": "Soporte de Múltiples Formatos de Exportación", "descripcion": "Soporta la exportación a varios formatos de video e imagen."}, {"nombre": "Configuración Detallada", "descripcion": "Ofrece un conjunto de parámetros en el constructor para ajustar la captura, incluyendo framerate, calidad, formato y opciones de guardado."}, {"nombre": "Guardado Automático", "descripcion": "La funcionalidad `autoSaveTime` permite guardar automáticamente segmentos de la captura para manejar archivos grandes y evitar problemas de memoria en el navegador."}, {"nombre": "Optimización de Memoria", "descripcion": "Opción para forzar la recolección de basura en Chrome para mantener el consumo de memoria estable."}], "statistics": {}, "temporal_info": {"ultimos_commits_referenciados": ["Mar 15, 2016 (updated samples)", "Apr 16, 2018 (rebuilt files)", "Mar 21, 2018 (updated example, replaced Whammy with webm-writer, ignored utils and extension folder, 1.0.9)", "Apr 21, 2017 (Add a .gitignore file)", "Aug 28, 2012 (added structure and files)", "Aug 8, 2020 (Fixes \"ellapsed\" typo)", "Dec 7, 2016 (added ignore to bower.json)"]}, "geographical_data": {}, "references": [{"nombre": "WebM Writer for JavaScript", "url": "https://github.com/thenickdude/webm-writer-js/"}, {"nombre": "gifjs", "url": "http://jnordberg.github.io/gif.js/"}, {"nombre": "ffmpegserver.js", "url": "https://github.com/greggman/ffmpegserver.js"}, {"nombre": "kkapture (ryg)", "url": "http://www.farb-rausch.de/~fg/kkapture/"}, {"nombre": "Whammy.js (Pre 1.0.9)", "url": "https://github.com/antimatter15/whammy"}, {"nombre": "tar.js (versión modificada)", "url": "https://github.com/beatgammit/tar-js"}, {"nombre": "download.js", "url": "http://danml.com/download.html"}, {"nombre": "Paquete NPM ccapture.js", "url": "https://www.npmjs.com/package/ccapture.js"}], "metodos_captura_canvas": {"metodo_principal": "capturer.capture( canvas )", "descripcion": "Debe ser llamado en el método `render()` de la animación, después de que el fotograma haya sido dibujado, pasándole el elemento canvas a capturar."}, "ejemplos_uso": {"instalacion": ["`npm install ccapture.js`", "`bower install ccapture.js`"], "inclusion_scripts": "Incluir CCapture[.min].js y WebM Writer o gifjs (o el paquete completo).", "creacion_objeto_ccapture": ["Para WebM: `var capturer = new CCapture( { format: 'webm' } );`", "Para GIF: `var capturer = new CCapture( { format: 'gif', workersPath: 'js/' } );`", "Para PNG (TAR): `var capturer = new CCapture( { format: 'png' } );`", "Para JPG (TAR): `var capturer = new CCapture( { format: 'jpg' } );`"], "configuracion_avanzada": "`var capturer = new CCapture( { framerate: 60, verbose: true } );`", "inicio_captura": "`capturer.start();` (establece los 'hooks' de tiempo)", "bucle_renderizado_y_captura": "javascript\nfunction render(){\n  requestAnimationFrame(render);\n  // código de renderizado ...\n  capturer.capture( canvas );\n}\nrender()\n", "detener_y_guardar": ["`capturer.stop();`", "`capturer.save();` (descarga un archivo {name}.extension)", "`capturer.save( function( blob ) { /* ... */ } );` (callback para obtener el blob)"], "ejemplo_enlace": "CCapture.js con Game of Life 3D: `http://www.clicktorelease.com/code/conway3d_ccapture/`"}, "formatos_exportacion": {"formatos_soportados": [{"nombre": "WebM", "encoder": "CCWebMEncoder", "libreria_base": "WebM Writer for JavaScript", "extension": ".webm"}, {"nombre": "PNG (en archivo TAR)", "encoder": "CCPNGEncoder", "extension": ".tar"}, {"nombre": "JPEG (en archivo TAR)", "encoder": "CCJPEGEncoder", "extension": ".tar"}, {"nombre": "GIF Animado", "encoder": "CCGIFEncoder", "libreria_base": "gifjs", "extension": ".gif"}, {"nombre": "Video en Servidor (FFMpeg)", "encoder": "CCFFMpegServerEncoder", "libreria_base": "ffmpegserver.js"}]}, "integracion": {"dependencias": ["CCapture[.min].js", "WebM Writer for JavaScript (para WebM)", "gifjs (para GIF)"], "metodos_instalacion": ["Inclusión directa de scripts (`<script>` tags)", "npm: `npm install ccapture.js`", "bower: `bower install ccapture.js`"], "requerimientos_navegador": "Soporte de implementación de `canvas`."}}